{"version":3,"sources":["Components/Forms/StepOne.js","Components/Forms/StepTwo.js","Components/Forms/Final.js","App.js","index.js"],"names":["StepOne","nextStep","handleFormData","values","prevStep","useState","error","setError","Card","style","marginTop","Body","Form","onSubmit","e","preventDefault","validator","isEmpty","firstName","lastName","display","justifyContent","Group","className","Control","border","borderRadius","padding","width","name","defaultValue","type","placeholder","onChange","Text","color","value","Button","variant","height","marginBottom","margin","onClick","backgroundColor","fontStyle","viewBox","fill","xmlns","marginRight","d","StepTwo","emailId","stateId","Final","country","postCode","phoneId","cardNumber","stAddressOne","stAddressTwo","cardCVV","cardMM","cardYYYY","cityId","textAlign","AppA","step","setstep","formData","setFormData","handleInputData","input","target","prevState","Container","Row","Col","md","span","offset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAwPeA,EAnPC,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAAe,EAExCC,oBAAS,GAF+B,mBAE3DC,EAF2D,KAEpDC,EAFoD,KAmBlE,OACE,8BACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,KAA1B,SACE,cAACF,EAAA,EAAKG,KAAN,UACE,eAACC,EAAA,EAAD,CAAMC,SAlBS,SAACC,GACtBA,EAAEC,iBAIAC,IAAUC,QAAQd,EAAOe,YACzBF,IAAUC,QAAQd,EAAOgB,UAEzBZ,GAAS,GAETN,KAQI,UACE,sBAAKQ,MAAO,CAAEW,QAAS,OAAQC,eAAgB,iBAA/C,UACE,eAACT,EAAA,EAAKU,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACX,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCoB,aAAc,UACdC,QAAS,2BACTC,MAAO,SAETC,KAAK,YACLC,aAAc3B,EAAOe,UACrBa,KAAK,OACLC,YAAY,aACZC,SAAU/B,EAAe,eAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,4CAIA,MAKJ,eAACvB,EAAA,EAAKU,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACX,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCoB,aAAc,UACdC,QAAS,2BACTC,MAAO,SAETC,KAAK,WACLC,aAAc3B,EAAOgB,SACrBY,KAAK,OACLC,YAAY,YACZC,SAAU/B,EAAe,cAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,qCAIA,SAKN,eAACvB,EAAA,EAAKU,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACX,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCoB,aAAc,UACdC,QAAS,4BAEXI,KAAK,QACLC,YAAY,oBACZC,SAAU/B,EAAe,WACzBkC,MAAO,iBAER9B,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,iCAIA,MAKJ,eAACvB,EAAA,EAAKU,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACX,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCoB,aAAc,UACdC,QAAS,4BAEXI,KAAK,QACLC,YAAY,mBACZC,SAAU/B,EAAe,aAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,iCAIA,MAKJ,eAACvB,EAAA,EAAKU,MAAN,CAAYC,UAAU,oBAAtB,UACE,cAACX,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCoB,aAAc,UACdC,QAAS,4BAEXI,KAAK,OACLC,YAAY,cACZC,SAAU/B,EAAe,gBAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,6CAIA,MAKJ,eAACvB,EAAA,EAAKU,MAAN,CACEC,UAAU,yBACVd,MAAO,CACLiB,aAAc,iBACdN,QAAS,OACTQ,MAAO,OACPP,eAAgB,iBANpB,UASE,cAACT,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCsB,MAAO,OACPF,aAAc,UAEdC,QAAS,4BAEXI,KAAK,SACLC,YAAY,KACZC,SAAU/B,EAAe,YAE3B,cAACU,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCsB,MAAO,QACPF,aAAc,UACdC,QAAS,4BAEXI,KAAK,SACLC,YAAY,OACZC,SAAU/B,EAAe,cAE3B,cAACU,EAAA,EAAKY,QAAN,CACEf,MAAO,CACLgB,OAAQnB,EAAQ,gBAAkB,GAClCsB,MAAO,OACPF,aAAc,UACdC,QAAS,4BAEXI,KAAK,SACLC,YAAY,MACZC,SAAU/B,EAAe,aAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,sCAIA,MAGJ,sBACE1B,MAAO,CACLW,QAAS,QACTQ,MAAO,QACPP,eAAgB,iBAJpB,UAOE,cAACgB,EAAA,EAAD,CACEC,QAAQ,UACRP,KAAK,SACLtB,MAAO,CACLmB,MAAO,QACPF,aAAc,OACda,OAAQ,OACRC,aAAc,OACdC,OAAQ,UARZ,kBAaA,eAACJ,EAAA,EAAD,CACEC,QAAQ,UACRI,QAAStC,EACT2B,KAAK,SACLtB,MAAO,CACLkC,gBAAiB,QACjBjC,UAAW,OACXe,OAAQ,OACRU,MAAO,QACPS,UAAW,QATf,UAYE,qBACEhB,MAAM,IACNW,OAAO,KACPM,QAAQ,WACRC,KAAK,OACLC,MAAM,6BACNtC,MAAO,CAAEuC,YAAa,KANxB,SAQE,sBACEC,EAAE,2DACFH,KAAK,YAtBX,0BCpFCI,EA5HC,SAAC,GAAoD,IAAlDjD,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,eAAgBE,EAAuB,EAAvBA,SAAUD,EAAa,EAAbA,OAAa,EAExCE,oBAAS,GAF+B,mBAE3DC,EAF2D,KAEpDC,EAFoD,KAkBlE,OACE,mCACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,KAA1B,SACE,cAACF,EAAA,EAAKG,KAAN,UACE,eAACC,EAAA,EAAD,CAAMC,SAjBS,SAACC,GACtBA,EAAEC,iBAIAC,IAAUC,QAAQd,EAAOgD,UACzBnC,IAAUC,QAAQd,EAAOiD,SAEzB7C,GAAS,GAETN,KAOI,UACE,eAACW,EAAA,EAAKU,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACX,EAAA,EAAKY,QAAN,CACEf,MAAO,CAAEgB,OAAQnB,EAAQ,gBAAkB,IAC3CyB,KAAK,OACLC,YAAY,mBACZC,SAAU/B,EAAe,kBAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,sCAIA,GAEF,cAACvB,EAAA,EAAKY,QAAN,CACEf,MAAO,CAAEgB,OAAQnB,EAAQ,gBAAkB,IAC3CyB,KAAK,OACLC,YAAY,mBACZC,SAAU/B,EAAe,kBAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,sCAIA,GAGF,cAACvB,EAAA,EAAKY,QAAN,CACEf,MAAO,CAAEgB,OAAQnB,EAAQ,gBAAkB,IAC3CyB,KAAK,OACLC,YAAY,UACZC,SAAU/B,EAAe,eAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,sCAIA,GAGF,cAACvB,EAAA,EAAKY,QAAN,CACEf,MAAO,CAAEgB,OAAQnB,EAAQ,gBAAkB,IAC3CyB,KAAK,OACLC,YAAY,QACZC,SAAU/B,EAAe,aAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,sCAIA,GAGF,cAACvB,EAAA,EAAKY,QAAN,CACEf,MAAO,CAAEgB,OAAQnB,EAAQ,gBAAkB,IAC3CyB,KAAK,OACLC,YAAY,YACZC,SAAU/B,EAAe,YAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,sCAIA,MAGJ,eAACvB,EAAA,EAAKU,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACX,EAAA,EAAKY,QAAN,CACEf,MAAO,CAAEgB,OAAQnB,EAAQ,gBAAkB,IAC3CyB,KAAK,OACLC,YAAY,OACZC,SAAU/B,EAAe,YAE1BI,EACC,cAACM,EAAA,EAAKsB,KAAN,CAAWzB,MAAO,CAAE0B,MAAO,OAA3B,sCAIA,MAGJ,sBAAK1B,MAAO,CAAEW,QAAS,OAAQC,eAAgB,gBAA/C,UACE,cAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAUI,QAAStC,EAAnC,kBAIA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,+BCnECsB,EAhDD,SAAC,GAAgB,IAAdlD,EAAa,EAAbA,OAGbe,EAcEf,EAdFe,UACAC,EAaEhB,EAbFgB,SACAiC,EAYEjD,EAZFiD,QACAE,EAWEnD,EAXFmD,QACAC,EAUEpD,EAVFoD,SACAJ,EASEhD,EATFgD,QACAK,EAQErD,EARFqD,QACAC,EAOEtD,EAPFsD,WACAC,EAMEvD,EANFuD,aACAC,EAKExD,EALFwD,aACAC,EAIEzD,EAJFyD,QACAC,EAGE1D,EAHF0D,OACAC,EAEE3D,EAFF2D,SACAC,EACE5D,EADF4D,OAEF,OACE,mCACE,cAACvD,EAAA,EAAD,CAAMC,MAAO,CAAEC,UAAW,IAAKsD,UAAW,QAA1C,SACE,eAACxD,EAAA,EAAKG,KAAN,WACE,8BACE,kDADF,IACiCO,EAAW,OAE5C,8BACE,iDADF,IACgCC,EAAU,OAE1C,8BACE,6CADF,IAC4BgC,EAAS,OARvC,WAUWK,EAVX,IAUqB,GAVrB,IAUyB,sBAVzB,cAWcC,EAXd,IAW2B,GAX3B,IAW+B,sBAX/B,UAYUI,EAZV,IAYmB,GAZnB,IAYuB,sBAZvB,YAaYC,EAbZ,IAauB,GAbvB,IAa2B,sBAb3B,WAcWF,EAdX,IAcqB,GAdrB,IAcyB,sBAdzB,gBAegBF,EAfhB,IAe+B,GAf/B,IAemC,sBAfnC,gBAgBgBC,EAhBhB,IAgB+B,GAhB/B,IAgBmC,sBAhBnC,WAiBWL,EAjBX,IAiBqB,GAjBrB,IAiByB,sBAjBzB,WAkBWF,EAlBX,IAkBqB,GAlBrB,IAkByB,sBAlBzB,YAmBYG,EAnBZ,IAmBuB,GAnBvB,IAmB2B,sBAnB3B,UAoBUQ,EApBV,IAoBmB,WC+DZE,MApGf,WAAgB,MAEU5D,mBAAS,GAFnB,mBAEP6D,EAFO,KAEDC,EAFC,OAKkB9D,mBAAS,CACvCa,UAAW,GACXC,SAAU,GACVgC,QAAS,GACTK,QAAS,GACTC,WAAY,GACZI,OAAQ,GACRC,SAAU,GACVF,QAAS,GACTF,aAAc,GACdC,aAAc,GACdL,QAAS,GACTF,QAAS,GACTG,SAAU,GACVQ,OAAQ,KAnBI,mBAKPK,EALO,KAKGC,EALH,KAuBRpE,EAAW,WACfkE,EAAQD,EAAO,IASXI,EAAkB,SAACC,GAAD,OAAW,SAACzD,GAAM,IAEhCsB,EAAUtB,EAAE0D,OAAZpC,MAGRiC,GAAY,SAACI,GAAD,mBAAC,eACRA,GADO,kBAETF,EAAQnC,SAKb,OAAQ8B,GAEN,KAAK,EACH,OACE,qBAAK3C,UAAU,MAAf,SACE,cAACmD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKxD,UAAU,gBAA3C,SACE,cAAC,EAAD,CACEtB,SAAUA,EACVC,eAAgBoE,EAChBnE,OAAQiE,YAQtB,KAAK,EACH,OACE,qBAAK7C,UAAU,MAAf,SACE,cAACmD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKxD,UAAU,gBAA3C,SACE,cAAC,EAAD,CACEtB,SAAUA,EACVG,SA5CC,WACf+D,EAAQD,EAAO,IA4CDhE,eAAgBoE,EAChBnE,OAAQiE,YAQtB,KAAK,EACH,OACE,qBAAK7C,UAAU,MAAf,SACE,cAACmD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKxD,UAAU,gBAA3C,SACE,cAAC,EAAD,CAAOpB,OAAQiE,YAO3B,QACE,OAAO,qBAAK7C,UAAU,U,OCjG5ByD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a58051bc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\n\n// creating functional component ans getting props from app.js and destucturing them\nconst StepOne = ({ nextStep, handleFormData, values, prevStep }) => {\n  //creating error state for validation\n  const [error, setError] = useState(false);\n\n  // after form submit validating the form data using validator\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    // checking if value of first name and last name is empty show error else take to step 2\n    if (\n      validator.isEmpty(values.firstName) ||\n      validator.isEmpty(values.lastName)\n    ) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n\n  return (\n    <div>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n          <Form onSubmit={submitFormData}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <Form.Group className=\"mb-4\">\n                <Form.Control\n                  style={{\n                    border: error ? \"2px solid red\" : \"\",\n                    borderRadius: \".625rem\",\n                    padding: \"0.8125rem 1.25rem .75rem\",\n                    width: \"145px\"\n                  }}\n                  name=\"firstName\"\n                  defaultValue={values.firstName}\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                  onChange={handleFormData(\"firstName\")}\n                />\n                {error ? (\n                  <Form.Text style={{ color: \"red\" }}>\n                    First Name is a required field\n                  </Form.Text>\n                ) : (\n                  \"\"\n                )}\n              </Form.Group>\n\n              {/* Last Name input */}\n              <Form.Group className=\"mb-4\">\n                <Form.Control\n                  style={{\n                    border: error ? \"2px solid red\" : \"\",\n                    borderRadius: \".625rem\",\n                    padding: \"0.8125rem 1.25rem .75rem\",\n                    width: \"145px\"\n                  }}\n                  name=\"lastName\"\n                  defaultValue={values.lastName}\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                  onChange={handleFormData(\"lastName\")}\n                />\n                {error ? (\n                  <Form.Text style={{ color: \"red\" }}>\n                    Last Name is a required\n                  </Form.Text>\n                ) : (\n                  \"\"\n                )}\n              </Form.Group>\n            </div>\n            {/* Input Email */}\n            <Form.Group className=\"mb-4\">\n              <Form.Control\n                style={{\n                  border: error ? \"2px solid red\" : \"\",\n                  borderRadius: \".625rem\",\n                  padding: \"0.8125rem 1.25rem .75rem\"\n                }}\n                type=\"email\"\n                placeholder=\"email@address.com\"\n                onChange={handleFormData(\"emailId\")}\n                value={\"dsada@dd.com\"}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  email is a required\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n\n            {/* Input Phone */}\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                style={{\n                  border: error ? \"2px solid red\" : \"\",\n                  borderRadius: \".625rem\",\n                  padding: \"0.8125rem 1.25rem .75rem\"\n                }}\n                type=\"phone\"\n                placeholder=\"Phone (+1534...)\"\n                onChange={handleFormData(\"phoneId\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  Phone is a required\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n\n            {/* Input CardNumber */}\n            <Form.Group className=\"col-form-label-sm\">\n              <Form.Control\n                style={{\n                  border: error ? \"2px solid red\" : \"\",\n                  borderRadius: \".625rem\",\n                  padding: \"0.8125rem 1.25rem .75rem\"\n                }}\n                type=\"text\"\n                placeholder=\"Card Number\"\n                onChange={handleFormData(\"cardNumber\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  Card Number is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n\n            {/* Input Card Number */}\n            <Form.Group\n              className=\"mb-4 col-form-label-lg\"\n              style={{\n                borderRadius: \"1rem!important\",\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"space-between\"\n              }}\n            >\n              <Form.Control\n                style={{\n                  border: error ? \"2px solid red\" : \"\",\n                  width: \"90px\",\n                  borderRadius: \".625rem\",\n\n                  padding: \"0.8125rem 1.25rem .75rem\"\n                }}\n                type=\"number\"\n                placeholder=\"MM\"\n                onChange={handleFormData(\"cardMM\")}\n              />\n              <Form.Control\n                style={{\n                  border: error ? \"2px solid red\" : \"\",\n                  width: \"100px\",\n                  borderRadius: \".625rem\",\n                  padding: \"0.8125rem 1.25rem .75rem\"\n                }}\n                type=\"number\"\n                placeholder=\"YYYY\"\n                onChange={handleFormData(\"cardYYYY\")}\n              />\n              <Form.Control\n                style={{\n                  border: error ? \"2px solid red\" : \"\",\n                  width: \"90px\",\n                  borderRadius: \".625rem\",\n                  padding: \"0.8125rem 1.25rem .75rem\"\n                }}\n                type=\"number\"\n                placeholder=\"CVV\"\n                onChange={handleFormData(\"cardCVV\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <div\n              style={{\n                display: \"block\",\n                width: \"100px\",\n                justifyContent: \"space-between\"\n              }}\n            >\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                style={{\n                  width: \"300px\",\n                  borderRadius: \"22px\",\n                  height: \"50px\",\n                  marginBottom: \"1rem\",\n                  margin: \"0 auto\"\n                }}\n              >\n                Next\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={prevStep}\n                type=\"submit\"\n                style={{\n                  backgroundColor: \"white\",\n                  marginTop: \"20px\",\n                  border: \"none\",\n                  color: \"black\",\n                  fontStyle: \"bold\"\n                }}\n              >\n                <svg\n                  width=\"8\"\n                  height=\"10\"\n                  viewBox=\"0 0 8 10\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  style={{ marginRight: \"5\" }}\n                >\n                  <path\n                    d=\"M-2.18557e-07 5L7.5 0.669872L7.5 9.33013L-2.18557e-07 5Z\"\n                    fill=\"black\"\n                  ></path>\n                </svg>\n                Go Back\n              </Button>\n            </div>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default StepOne;\n","import React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\n\n// creating functional component ans getting props from app.js and destucturing them\nconst StepTwo = ({ nextStep, handleFormData, prevStep, values }) => {\n  //creating error state for validation\n  const [error, setError] = useState(false);\n\n  // after form submit validating the form data using validator\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    // checking if value of first name and last name is empty show error else take to next step\n    if (\n      validator.isEmpty(values.emailId) ||\n      validator.isEmpty(values.stateId)\n    ) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n  return (\n    <>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n          <Form onSubmit={submitFormData}>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                type=\"text\"\n                placeholder=\"Street Address 1\"\n                onChange={handleFormData(\"stAddressOne\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                type=\"text\"\n                placeholder=\"Street Address 2\"\n                onChange={handleFormData(\"stAddressTwo\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                type=\"text\"\n                placeholder=\"Country\"\n                onChange={handleFormData(\"countryId\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                type=\"text\"\n                placeholder=\"State\"\n                onChange={handleFormData(\"stateId\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                type=\"text\"\n                placeholder=\"Post Code\"\n                onChange={handleFormData(\"postId\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                type=\"text\"\n                placeholder=\"City\"\n                onChange={handleFormData(\"cityId\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n              <Button variant=\"primary\" onClick={prevStep}>\n                Back\n              </Button>\n\n              <Button variant=\"primary\" type=\"submit\">\n                Next\n              </Button>\n            </div>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StepTwo;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst Final = ({ values }) => {\n  //destructuring the object from values\n  const {\n    firstName,\n    lastName,\n    stateId,\n    country,\n    postCode,\n    emailId,\n    phoneId,\n    cardNumber,\n    stAddressOne,\n    stAddressTwo,\n    cardCVV,\n    cardMM,\n    cardYYYY,\n    cityId\n  } = values;\n  return (\n    <>\n      <Card style={{ marginTop: 100, textAlign: \"left\" }}>\n        <Card.Body>\n          <p>\n            <strong>First Name :</strong> {firstName}{\" \"}\n          </p>\n          <p>\n            <strong>Last Name :</strong> {lastName}{\" \"}\n          </p>\n          <p>\n            <strong>Email :</strong> {emailId}{\" \"}\n          </p>\n          phoneId {phoneId} {\"\"},<p />\n          cardNumber {cardNumber} {\"\"},<p />\n          cardMM {cardMM} {\"\"},<p />\n          cardYYYY {cardYYYY} {\"\"},<p />\n          cardCVV {cardCVV} {\"\"},<p />\n          stAddressOne {stAddressOne} {\"\"},<p />\n          stAddressTwo {stAddressTwo} {\"\"},<p />\n          country {country} {\"\"},<p />\n          stateId {stateId} {\"\"},<p />\n          postCode {postCode} {\"\"},<p />\n          cityId {cityId} {\"\"}\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default Final;\n","import \"./App.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport StepOne from \"./Components/Forms/StepOne\";\nimport StepTwo from \"./Components/Forms/StepTwo\";\nimport Final from \"./Components/Forms/Final\";\n\nfunction AppA() {\n  //state for steps\n  const [step, setstep] = useState(1);\n\n  //state for form data\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    emailId: \"\",\n    phoneId: \"\",\n    cardNumber: \"\",\n    cardMM: \"\",\n    cardYYYY: \"\",\n    cardCVV: \"\",\n    stAddressOne: \"\",\n    stAddressTwo: \"\",\n    country: \"\",\n    stateId: \"\",\n    postCode: \"\",\n    cityId: \"\"\n  });\n\n  // function for going to next step by increasing step state by 1\n  const nextStep = () => {\n    setstep(step + 1);\n  };\n\n  // function for going to previous step by decreasing step state by 1\n  const prevStep = () => {\n    setstep(step - 1);\n  };\n\n  // handling form input data by taking onchange value and updating our previous form data state\n  const handleInputData = (input) => (e) => {\n    // input value from the form\n    const { value } = e.target;\n\n    //updating for data state taking previous state and then adding new value to create new object\n    setFormData((prevState) => ({\n      ...prevState,\n      [input]: value\n    }));\n  };\n\n  // javascript switch case to show different form in each step\n  switch (step) {\n    // case 1 to show stepOne form and passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\n    case 1:\n      return (\n        <div className=\"App\">\n          <Container>\n            <Row>\n              <Col md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                <StepOne\n                  nextStep={nextStep}\n                  handleFormData={handleInputData}\n                  values={formData}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    // case 2 to show stepTwo form passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\n    case 2:\n      return (\n        <div className=\"App\">\n          <Container>\n            <Row>\n              <Col md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                <StepTwo\n                  nextStep={nextStep}\n                  prevStep={prevStep}\n                  handleFormData={handleInputData}\n                  values={formData}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    // Only formData is passed as prop to show the final value at form submit\n    case 3:\n      return (\n        <div className=\"App\">\n          <Container>\n            <Row>\n              <Col md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                <Final values={formData} />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    // default case to show nothing\n    default:\n      return <div className=\"App\"></div>;\n  }\n}\n\nexport default AppA;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}